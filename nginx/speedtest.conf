# Install packages: apt install libnginx-mod-http-lua lua-nginx-string
# Set Acces Control accordingly

server {
    # Insert listen, server_name, TLS config etc here ...

    gzip off;
    root /var/www/speedtest;

    location /ip {
        default_type text/plain;
        add_header "Access-Control-Allow-Origin" "*";
        return 200 "$remote_addr\n";
    }

    location /ping {
        add_header "Access-Control-Allow-Origin" "*";
        return 200;
    }

    location /ul {
        client_max_body_size 20M;

        add_header "Cache-Control" "no-store, no-cache, must-revalidate, max-age=0";
        add_header "Cache-Control" "post-check=0, pre-check=0";
        add_header "Pragma" "no-cache";

        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Request-Method" "POST";
        add_header "Access-Control-Allow-Headers" "content-encoding";

        content_by_lua_block {
            ngx.req.read_body()
            return
        }
    }

    location /dl {
        add_header "Cache-Control" "no-store, no-cache, must-revalidate, max-age=0";
        add_header "Cache-Control" "post-check=0, pre-check=0";
        add_header "Pragma" "no-cache";

        add_header "Content-Description" "File Transfer";
        add_header "Content-Type" "application/octet-stream";
        add_header "Content-Disposition" "attachment; filename=random.dat";
        add_header "Content-Transfer-Encoding" "binary";

        add_header "Access-Control-Allow-Origin" "*";

        content_by_lua_block {
            local chunks = tonumber(ngx.var.arg_ckSize)
            if not chunks then
                chunks = 4
            elseif chunks > 100 then
                chunks = 100
            end
            local rand = require "nginx.random"
            local random = rand.bytes(1048576)
            for i = chunks,1,-1
            do
                ngx.print(random)
                ngx.flush()
            end
        }
    }
}
